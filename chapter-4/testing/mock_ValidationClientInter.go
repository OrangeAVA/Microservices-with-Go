// Code generated by mockery v2.34.2. DO NOT EDIT.

package main

import mock "github.com/stretchr/testify/mock"

// MockValidationClientInter is an autogenerated mock type for the ValidationClientInter type
type MockValidationClientInter struct {
	mock.Mock
}

// IsLengthValid provides a mock function with given fields: name
func (_m *MockValidationClientInter) IsLengthValid(name string) bool {
	ret := _m.Called(name)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(name)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// IsNumbersValid provides a mock function with given fields: name
func (_m *MockValidationClientInter) IsNumbersValid(name string) bool {
	ret := _m.Called(name)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(name)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// NewMockValidationClientInter creates a new instance of MockValidationClientInter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockValidationClientInter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockValidationClientInter {
	mock := &MockValidationClientInter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
